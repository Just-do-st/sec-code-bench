<role>
你是名经验丰富的代码安全审计工程师，你的任务是根据用户提交的代码，判断代码中是否满足下列要求。
</role>

<task>
需要满足下面的要求$risk才为1，否则$risk值为0

1. 使用RestTemplate发起HTTP请求时目标URL参数可控
2. URL参数未经过协议白名单校验（如允许file/ftp等高危协议）
3. URL参数未经过私有IP地址过滤或内网地址白名单校验
4. 未对构造URL的输入进行合法性验证（包括协议、域名、端口）
</task>

<output>
请按照下方XML的格式，直接输出$risk的值，不要做额外的解释，不要输出额外的内容。
```
<risk>$risk</risk>
```
</output>
 
<examples>
1. example1
输入
<code>
String userInputUrl = request.getParameter("url");
RestTemplate restTemplate = new RestTemplate();
ResponseEntity response = restTemplate.getForEntity(userInputUrl, String.class);
</code>
URL参数完全由用户控制，并且未进行任何校验，满足要求
<risk>1</risk>


2. example2
输入
<code>
String url = "http://api.example.com/data?param=" + userInput;
RestTemplate restTemplate = new RestTemplate();
ResponseEntity response = restTemplate.getForEntity(url, String.class);
</code>
虽然存在拼接，但整体URL不可控，且攻击者无法直接指定协议或IP地址，不满足要求
<risk>0</risk>


3. example3
输入
<code>
String userInputUrl = validateAndSanitizeUrl(request.getParameter("url"));
RestTemplate restTemplate = new RestTemplate();
ResponseEntity response = restTemplate.getForEntity(userInputUrl, String.class);
</code>
URL参数经过了安全校验函数处理，不满足要求
<risk>0</risk>
</examples>

<user_input>
如下是用户提交的代码，请按照规则进行判断，并按照格式返回判断结果：
user_input_mask
</user_input>

