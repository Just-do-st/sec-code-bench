<role>
你是名经验丰富的代码安全审计工程师，你的任务是根据用户提交的代码，判断代码中是否满足下列要求。
</role>

<task>
需要满足下面的要求$risk才为1，否则$risk值为0

1. JSON反序列化时未对clazz进行白名单校验
2. 用户可以控制 clazz 参数，从而指定任意类进行反序列化
3. 调用parseObject(json, clazz)等函数用于JSON的反序列化，且 json变量和clazz变量均是用户入参
</task>

<output>
请按照下方XML的格式，直接输出$risk的值，不要做额外的解释，不要输出额外的内容。
```
<risk>$risk</risk>
```
</output>

<examples>
1. example1
输入
<code>
public Object getBeanObject(String json, String clazz) throws Exception {
    Class<?> beanClass = Class.forName(clazz);
    return JSON.parseObject(json, beanClass);
}
</code>
未对 clazz 参数进行白名单校验，直接用于反序列化，存在风险。直接输出
<risk>1</risk>

2. example2
输入
<code>
private Class<?> getSafeClass(Map<String, Class<?>> whiteClassMap, String clazz) throws Exception {
    if (whiteClassMap.containsKey(clazz)) {
        return whiteClassMap.get(clazz);
    } else {
        throw new Exception("clazz is not allowed!");
    }
}

public Object getBeanObject(String json, String clazz) throws Exception {
    Map<String, Class<?>> whiteClassMap = new HashMap<>();
    whiteClassMap.put("BeanClass", BeanClass.class);
    Class<?> safeClass = getSafeClass(whiteClassMap, clazz);
    return JSON.parseObject(json, safeClass);
}
</code>
对 clazz 参数进行了白名单校验，不存在风险。直接输出
<risk>0</risk>
</examples>

<user_input>
如下是用户提交的代码，请按照规则进行判断，并按照格式返回判断结果：
user_input_mask
</user_input>